{"type":"issue","id":"#Ultraviolence-Examples#1","title":"Hit testing demo","description":"Create a demo that demonstrates hit testing capabilities.\n\nOrigin: GitHub issue #273","created_at":"2025-10-22T01:46:32.283927Z","updated_at":"2025-10-23T14:56:26.379298Z","status":"closed","closed_at":"2025-10-23T14:56:26.379298Z","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#2","title":"Fix up names of shaders vs demos vs demo views vs elements","description":"e.g. TextureBillboard vs BillboardShader etc\n\nNeed to standardize naming conventions across the examples project.\n\nOrigin: GitHub issue #250","created_at":"2025-10-22T01:46:32.304640Z","updated_at":"2025-10-23T14:55:38.626905Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#3","title":"Code Reuse Pass","description":"Go through all demo code and look for code reuse opportunities.\n\nLots of shaders are doing very similar things now and the demos are bloating a little.\n\nAlso look for chances to make these part of Batteries Included.\n\nOrigin: GitHub issue #246","created_at":"2025-10-22T01:46:32.324037Z","updated_at":"2025-10-23T14:55:38.627364Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#4","title":"Add a MetalPaint demo","description":"It's MacPaint but Metal!\n\nCreate a painting/drawing demo using Metal.\n\nOrigin: GitHub issue #235","created_at":"2025-10-22T01:46:32.343484Z","updated_at":"2025-10-23T14:55:38.627571Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#5","title":"Make more demos runable in offscreen(video)renderer","description":"Enable additional demos to work with the offscreen video renderer.\n\nOrigin: GitHub issue #215","created_at":"2025-10-22T01:46:32.363041Z","updated_at":"2025-10-23T14:55:38.627784Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#6","title":"Move demos back into own repo","description":"Separate the demos into their own repository.\n\nOrigin: GitHub issue #213","created_at":"2025-10-22T01:46:32.383249Z","updated_at":"2025-10-23T14:57:09.870923Z","status":"closed","closed_at":"2025-10-23T14:57:09.870922Z","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#7","title":"Standalone demo","description":"Create the simplest possible demo that can run independently.\n\nOrigin: GitHub issue #212","created_at":"2025-10-22T01:46:32.403145Z","updated_at":"2025-10-23T14:55:38.628185Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#8","title":"AxisLines should extend to screen edges instead of fixed world-space length","description":"## Current Behavior\nThe AxisLines element currently uses a fixed scale parameter to set the length of axis lines in world space. This means the lines have a fixed length regardless of camera position or zoom level.\n\n## Desired Behavior\nThe axis lines should extend all the way to the edges of the screen/viewport, similar to how 3D modeling applications display axis lines. This would require:\n\n1. Computing the axis lines in clip space or screen space rather than world space\n2. Projecting the axis directions to find where they intersect with the screen boundaries\n3. Drawing lines from the origin to these intersection points\n\n## Implementation Notes\n- May need to pass viewport dimensions to the shader\n- Could compute line endpoints in vertex shader using inverse projection\n- Alternatively, could use a geometry shader or compute shader to calculate proper endpoints\n- Need to handle cases where origin is off-screen\n\n## Workaround\nFor now, using a very large scale value (e.g., 10000.0) provides adequate coverage for most camera positions.\n\nOrigin: GitHub issue #262","created_at":"2025-10-22T01:46:32.423318Z","updated_at":"2025-10-23T14:55:38.628384Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#9","title":"Make .ultraviolenceExampleShaders() into property","description":"Convert the .ultraviolenceExampleShaders() method into a property for cleaner API.\n\nOrigin: GitHub issue #261","created_at":"2025-10-22T01:46:32.445017Z","updated_at":"2025-10-23T14:55:38.628617Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#10","title":"Sanitize vertex descriptors","description":"Clean up and standardize vertex descriptors across the examples project.\n\nOrigin: GitHub issue #259","created_at":"2025-10-22T01:46:32.466923Z","updated_at":"2025-10-23T14:55:38.628815Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#11","title":"Link all all issues from ultraviolence","description":"{\"id\":\"uv-eg-20\",\"title\":\"Make sure all compute examples are using good sizes\",\"description\":\"Review all compute shader examples to ensure they're using appropriate thread group sizes and dispatch sizes for optimal performance.\\n\\nOrigin: GitHub issue #252\",\"status\":\"open\",\"priority\":2,\"issue_type\":\"task\",\"created_at\":\"2025-10-20T19:42:22.465146-07:00\",\"updated_at\":\"2025-10-21T13:08:41.019653-07:00\"}","created_at":"2025-10-22T01:46:32.485889Z","updated_at":"2025-10-23T14:55:38.629036Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#12","title":"Hit testing demo","description":"Create a demo that demonstrates hit testing capabilities.\n\nOrigin: GitHub issue #273","created_at":"2025-10-22T01:46:47.614657Z","updated_at":"2025-10-23T14:56:24.462536Z","status":"closed","closed_at":"2025-10-23T14:56:24.462536Z","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#13","title":"Fix up names of shaders vs demos vs demo views vs elements","description":"e.g. TextureBillboard vs BillboardShader etc\n\nNeed to standardize naming conventions across the examples project.\n\nOrigin: GitHub issue #250","created_at":"2025-10-22T01:46:47.634652Z","updated_at":"2025-10-23T14:55:38.629441Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#14","title":"Code Reuse Pass","description":"Go through all demo code and look for code reuse opportunities.\n\nLots of shaders are doing very similar things now and the demos are bloating a little.\n\nAlso look for chances to make these part of Batteries Included.\n\nOrigin: GitHub issue #246","created_at":"2025-10-22T01:46:47.653400Z","updated_at":"2025-10-23T14:55:38.629615Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#15","title":"Add a MetalPaint demo","description":"It's MacPaint but Metal!\n\nCreate a painting/drawing demo using Metal.\n\nOrigin: GitHub issue #235","created_at":"2025-10-22T01:46:47.672645Z","updated_at":"2025-10-23T14:55:38.629796Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#16","title":"Make more demos runable in offscreen(video)renderer","description":"Enable additional demos to work with the offscreen video renderer.\n\nOrigin: GitHub issue #215","created_at":"2025-10-22T01:46:47.692010Z","updated_at":"2025-10-23T14:55:38.629995Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#17","title":"Move demos back into own repo","description":"Separate the demos into their own repository.\n\nOrigin: GitHub issue #213","created_at":"2025-10-22T01:46:47.711193Z","updated_at":"2025-10-23T14:56:20.735509Z","status":"closed","closed_at":"2025-10-23T14:56:20.735508Z","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#18","title":"Standalone demo","description":"Create the simplest possible demo that can run independently.\n\nOrigin: GitHub issue #212","created_at":"2025-10-22T01:46:47.731394Z","updated_at":"2025-10-23T14:55:38.630361Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#19","title":"AxisLines should extend to screen edges instead of fixed world-space length","description":"## Current Behavior\nThe AxisLines element currently uses a fixed scale parameter to set the length of axis lines in world space. This means the lines have a fixed length regardless of camera position or zoom level.\n\n## Desired Behavior\nThe axis lines should extend all the way to the edges of the screen/viewport, similar to how 3D modeling applications display axis lines. This would require:\n\n1. Computing the axis lines in clip space or screen space rather than world space\n2. Projecting the axis directions to find where they intersect with the screen boundaries\n3. Drawing lines from the origin to these intersection points\n\n## Implementation Notes\n- May need to pass viewport dimensions to the shader\n- Could compute line endpoints in vertex shader using inverse projection\n- Alternatively, could use a geometry shader or compute shader to calculate proper endpoints\n- Need to handle cases where origin is off-screen\n\n## Workaround\nFor now, using a very large scale value (e.g., 10000.0) provides adequate coverage for most camera positions.\n\nOrigin: GitHub issue #262","created_at":"2025-10-22T01:46:47.751346Z","updated_at":"2025-10-23T14:55:38.630531Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#20","title":"Make .ultraviolenceExampleShaders() into property","description":"Convert the .ultraviolenceExampleShaders() method into a property for cleaner API.\n\nOrigin: GitHub issue #261","created_at":"2025-10-22T01:46:47.770638Z","updated_at":"2025-10-23T14:55:38.630774Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#21","title":"Sanitize vertex descriptors","description":"Clean up and standardize vertex descriptors across the examples project.\n\nOrigin: GitHub issue #259","created_at":"2025-10-22T01:46:47.790429Z","updated_at":"2025-10-23T14:55:38.630975Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#22","title":"Link all all issues from ultraviolence","description":"{\"id\":\"uv-eg-20\",\"title\":\"Make sure all compute examples are using good sizes\",\"description\":\"Review all compute shader examples to ensure they're using appropriate thread group sizes and dispatch sizes for optimal performance.\\n\\nOrigin: GitHub issue #252\",\"status\":\"open\",\"priority\":2,\"issue_type\":\"task\",\"created_at\":\"2025-10-20T19:42:22.465146-07:00\",\"updated_at\":\"2025-10-21T13:08:41.019653-07:00\"}","created_at":"2025-10-22T01:46:47.811477Z","updated_at":"2025-10-23T14:56:32.981170Z","status":"closed","closed_at":"2025-10-23T14:56:32.981169Z","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#23","title":"Implement texture pooling/reuse strategy","description":"Currently each demo creates textures on-demand in init/onChange handlers with no reuse strategy. Issues: potential resource leaks in long-running demos, no centralized lifecycle management, repeated allocation/deallocation overhead. Should implement texture pooling for common sizes/formats to improve performance and resource management.","created_at":"2025-10-22T01:46:47.866744Z","updated_at":"2025-10-23T14:55:38.631344Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#24","title":"Extract common UI controls into reusable components","description":"Many demos duplicate similar UI patterns: slider controls for parameters, color pickers, dropdown menus, reset/download buttons. Should create reusable SwiftUI components in Support/ or new UI/ directory: ParameterSlider, DemoColorPicker, DemoOptionPicker, etc. This will reduce code duplication and ensure consistent UI across demos.","created_at":"2025-10-22T01:46:47.886809Z","updated_at":"2025-10-23T14:55:38.631527Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#25","title":"Add inline documentation to complex demos","description":"Complex demos lack sufficient inline documentation: PBR shader calculations, scene graph traversal logic, compute shader algorithms (Game of Life, particle systems), GLTF parsing. Should add: doc comments explaining what each demo demonstrates, inline comments for complex algorithms, references to graphics programming concepts, links to relevant papers/resources. This makes the examples more educational.","created_at":"2025-10-22T01:46:47.907047Z","updated_at":"2025-10-23T14:55:38.631726Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#26","title":"Standardize shader management approach","description":"Currently have inconsistent shader source management: some demos embed Metal shader code as strings (TriangleDemoView), others use external shader bundles via MetalCompilerPlugin, no shader validation at compile time for string-embedded shaders. Should establish standard approach, document when to use each method, prefer external shaders for complex code, add compile-time validation where possible, standardize namespace usage.","created_at":"2025-10-22T01:46:47.927225Z","updated_at":"2025-10-23T14:55:38.631921Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#27","title":"Add Metal validation layer checks for development builds","description":"Should enable Metal API validation and shader validation in development builds to catch: incorrect resource usage, memory leaks, invalid render state, shader compilation warnings, performance issues. Add conditional compilation to enable validation layers in debug builds while keeping release builds optimized.","created_at":"2025-10-22T01:46:47.947093Z","updated_at":"2025-10-23T14:55:38.632109Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#28","title":"Add proper assertions for Texture2DSpecifier values","description":"Found in Sources/UltraviolenceExamples/Support/Texture2DSpecifier.swift:20, :28, :36\n\nNeed to add proper assertions to verify that values are correct in Texture2DSpecifier methods.\n\nOrigin: GitHub issue #287","created_at":"2025-10-22T01:46:47.967474Z","updated_at":"2025-10-23T14:55:38.632277Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#29","title":"Use Mesh instead of MTKMesh more","description":"{\"id\":\"uv-eg-41\",\"title\":\"Flesh out Mesh\",\"description\":\"\",\"status\":\"open\",\"priority\":2,\"issue_type\":\"task\",\"created_at\":\"2025-10-20T19:42:22.465146-07:00\",\"updated_at\":\"2025-10-21T13:08:41.02548-07:00\"}","created_at":"2025-10-22T01:46:47.987460Z","updated_at":"2025-10-23T14:55:38.632488Z","status":"new","priority":"none","kind":"none","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#30","title":"Make Mesh Codable","description":"","created_at":"2025-10-23T16:33:38.784588Z","updated_at":"2025-10-23T16:55:11.047582Z","status":"closed","closed_at":"2025-10-23T16:55:11.047581Z","priority":"high","kind":"task","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#31","title":"Make Network demo use Mesh","description":"","created_at":"2025-10-23T16:33:52.397736Z","updated_at":"2025-10-23T17:27:42.570280Z","status":"closed","closed_at":"2025-10-23T17:27:42.570280Z","priority":"high","kind":"task","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#32","title":"Make Edge demo use Mesh","description":"","created_at":"2025-10-23T16:34:01.570462Z","updated_at":"2025-10-23T16:46:20.485463Z","status":"closed","closed_at":"2025-10-23T16:46:20.485463Z","priority":"high","kind":"task","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#33","title":"Make Network demo use Edge Renderer","description":"","created_at":"2025-10-23T16:34:14.924533Z","updated_at":"2025-10-23T17:01:23.567685Z","status":"closed","closed_at":"2025-10-23T17:01:23.567685Z","priority":"high","kind":"task","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#34","title":"Make the ARKit demo generate Meshes","description":"","created_at":"2025-10-23T16:34:50.717050Z","updated_at":"2025-10-23T20:10:29.096887Z","status":"closed","closed_at":"2025-10-23T20:10:29.096887Z","priority":"high","kind":"task","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#35","title":"EdgeLinesRenderPass requires 32-byte stride but ARKit meshes only have 12-byte position data","description":"EdgeLinesRenderPass validates 32-byte vertex stride (position+normal+texCoord) but ARKit meshes only have 12-byte position data. Need to either relax validation or pad ARKit vertices.","created_at":"2025-10-23T18:01:40.193417Z","updated_at":"2025-10-23T20:10:26.481943Z","status":"closed","closed_at":"2025-10-23T20:10:26.481943Z","priority":"medium","kind":"bug","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"issue","id":"#Ultraviolence-Examples#36","title":"REname ARKitDemoView to CaptureDemo","description":"","created_at":"2025-10-23T20:10:46.680281Z","updated_at":"2025-10-23T20:10:50.339012Z","status":"open","priority":"high","kind":"task","labels":[],"dependencies":[],"milestone":null,"pinned":false}
{"type":"comment","issue_id":"#Ultraviolence-Examples#30","text":"Implemented Codable conformance for Mesh and all nested types. MTLBuffer contents are encoded/decoded as Data. Metal enums (MTLPrimitiveType, MTLVertexFormat, MTLVertexStepFunction) use raw UInt values. Codable implementations are in extensions. MTLVertexFormat and MTLVertexStepFunction extensions moved to Support.swift.","created_at":"2025-10-23T16:55:11.047998Z"}
{"type":"comment","issue_id":"#Ultraviolence-Examples#31","text":"Implemented in NetworkListenerDemoView. The demo now converts AR mesh geometries to Mesh objects and renders them using EdgeLinesRenderPass.","created_at":"2025-10-23T17:27:42.570651Z"}
{"type":"comment","issue_id":"#Ultraviolence-Examples#32","text":"Converted EdgeRenderingDemo (now EdgeLinesDemoView) to use built-in Mesh type instead of MTKMesh. Primitive shapes (plane, cube, sphere) now use TrivialMesh factory methods. Teapot still loads via ModelIO but converts to Mesh. Also moved MeshWithEdges into EdgeLinesRenderPass and renamed EdgeRenderingElement to EdgeLinesRenderPass.","created_at":"2025-10-23T16:46:20.485890Z"}
{"type":"comment","issue_id":"#Ultraviolence-Examples#33","text":"Integrated EdgeLinesRenderPass into Network demo. AR mesh geometries from anchors are now converted to Mesh with edge extraction and rendered using EdgeLinesRenderPass instead of GraphicsContext3D triangle-by-triangle rendering. Meshes rendered in purple with 2.0 line width.","created_at":"2025-10-23T17:01:23.568084Z"}
