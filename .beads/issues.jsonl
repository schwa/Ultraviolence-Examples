{"id":"uv-eg-1","title":"First issue","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-17T09:48:21.761857-07:00","updated_at":"2025-10-17T10:40:55.787327-07:00","closed_at":"2025-10-17T10:40:55.787327-07:00"}
{"id":"uv-eg-10","title":"Hit testing demo","description":"Create a demo that demonstrates hit testing capabilities.\n\nOrigin: GitHub issue #273","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-19T08:42:53.359439-07:00","updated_at":"2025-10-19T08:42:53.359439-07:00"}
{"id":"uv-eg-11","title":"Fix up names of shaders vs demos vs demo views vs elements","description":"e.g. TextureBillboard vs BillboardShader etc\n\nNeed to standardize naming conventions across the examples project.\n\nOrigin: GitHub issue #250","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.431411-07:00","updated_at":"2025-10-19T08:42:53.431411-07:00"}
{"id":"uv-eg-12","title":"Code Reuse Pass","description":"Go through all demo code and look for code reuse opportunities.\n\nLots of shaders are doing very similar things now and the demos are bloating a little.\n\nAlso look for chances to make these part of Batteries Included.\n\nOrigin: GitHub issue #246","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.504907-07:00","updated_at":"2025-10-19T08:42:53.504907-07:00"}
{"id":"uv-eg-13","title":"Add a MetalPaint demo","description":"It's MacPaint but Metal!\n\nCreate a painting/drawing demo using Metal.\n\nOrigin: GitHub issue #235","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-19T08:42:53.581389-07:00","updated_at":"2025-10-19T08:42:53.581389-07:00"}
{"id":"uv-eg-14","title":"Make more demos runable in offscreen(video)renderer","description":"Enable additional demos to work with the offscreen video renderer.\n\nOrigin: GitHub issue #215","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.653507-07:00","updated_at":"2025-10-19T08:42:53.653507-07:00"}
{"id":"uv-eg-15","title":"Move demos back into own repo","description":"Separate the demos into their own repository.\n\nOrigin: GitHub issue #213","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.729048-07:00","updated_at":"2025-10-19T08:42:53.729048-07:00"}
{"id":"uv-eg-16","title":"Standalone demo","description":"Create the simplest possible demo that can run independently.\n\nOrigin: GitHub issue #212","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-19T08:42:53.80323-07:00","updated_at":"2025-10-19T08:42:53.80323-07:00"}
{"id":"uv-eg-17","title":"AxisLines should extend to screen edges instead of fixed world-space length","description":"## Current Behavior\nThe AxisLines element currently uses a fixed scale parameter to set the length of axis lines in world space. This means the lines have a fixed length regardless of camera position or zoom level.\n\n## Desired Behavior\nThe axis lines should extend all the way to the edges of the screen/viewport, similar to how 3D modeling applications display axis lines. This would require:\n\n1. Computing the axis lines in clip space or screen space rather than world space\n2. Projecting the axis directions to find where they intersect with the screen boundaries\n3. Drawing lines from the origin to these intersection points\n\n## Implementation Notes\n- May need to pass viewport dimensions to the shader\n- Could compute line endpoints in vertex shader using inverse projection\n- Alternatively, could use a geometry shader or compute shader to calculate proper endpoints\n- Need to handle cases where origin is off-screen\n\n## Workaround\nFor now, using a very large scale value (e.g., 10000.0) provides adequate coverage for most camera positions.\n\nOrigin: GitHub issue #262","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-19T08:48:17.080852-07:00","updated_at":"2025-10-19T08:48:17.080852-07:00"}
{"id":"uv-eg-18","title":"Make .ultraviolenceExampleShaders() into property","description":"Convert the .ultraviolenceExampleShaders() method into a property for cleaner API.\n\nOrigin: GitHub issue #261","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:48:17.132019-07:00","updated_at":"2025-10-19T08:48:17.132019-07:00"}
{"id":"uv-eg-19","title":"Sanitize vertex descriptors","description":"Clean up and standardize vertex descriptors across the examples project.\n\nOrigin: GitHub issue #259","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:48:17.18433-07:00","updated_at":"2025-10-19T08:48:17.18433-07:00"}
{"id":"uv-eg-2","title":"Link all all issues from ultraviolence","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-17T09:49:16.931263-07:00","updated_at":"2025-10-17T09:49:16.931263-07:00"}
{"id":"uv-eg-20","title":"Make sure all compute examples are using good sizes","description":"Review all compute shader examples to ensure they're using appropriate thread group sizes and dispatch sizes for optimal performance.\n\nOrigin: GitHub issue #252","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:50:22.431445-07:00","updated_at":"2025-10-19T08:50:22.431445-07:00"}
{"id":"uv-eg-21","title":"Address redundant bindings metal warnings","description":"Fix or suppress redundant bindings warnings in Metal shaders across the examples.\n\nOrigin: GitHub issue #258","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:50:22.488191-07:00","updated_at":"2025-10-19T08:50:22.488191-07:00"}
{"id":"uv-eg-22","title":"Sanitize vertex descriptors","description":"Clean up and standardize vertex descriptors across the project.\n\nOrigin: GitHub issue #260","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:50:22.544155-07:00","updated_at":"2025-10-19T08:50:22.544155-07:00"}
{"id":"uv-eg-23","title":"Sanitize all shader names, namespaces, uniform names etc","description":"Standardize naming conventions for shaders, namespaces, uniform names, and other Metal-related identifiers across the examples.\n\nOrigin: GitHub issue #266","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:50:22.600624-07:00","updated_at":"2025-10-19T08:50:22.600624-07:00"}
{"id":"uv-eg-3","title":"Fix PBR demo on iOS","description":"The PBR demo is not working correctly on iOS devices","notes":"PBR demo crashes on iOS but works fine on macOS.\n\nRoot cause: ColorSource.useResource() was calling .useResource() on textureCube and depth2D texture variants, which causes hangs/crashes on iOS (and depth2D hangs on macOS too).\n\nSolution: Only call .useResource() for texture2D variant in ColorSource. The textureCube and depth2D variants must be skipped.\n\nKey findings:\n- When using argument buffers with GPU resource IDs, you SHOULD still call .useResource() to declare resources\n- But only texture2D works reliably - textureCube and depth2D cause platform-specific issues\n- texture2D: works on both iOS and macOS ✓\n- textureCube: causes hang on iOS ✗\n- depth2D: causes hang on macOS and iOS ✗\n\nFixed in ColorSource.swift by commenting out the problematic useResource calls.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-17T10:38:55.838052-07:00","updated_at":"2025-10-17T13:37:38.598262-07:00"}
{"id":"uv-eg-4","title":"Add proper assertions for Texture2DSpecifier values","description":"Found in Sources/UltraviolenceExamples/Support/Texture2DSpecifier.swift:20, :28, :36\n\nNeed to add proper assertions to verify that values are correct in Texture2DSpecifier methods.\n\nOrigin: GitHub issue #287","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:52.952706-07:00","updated_at":"2025-10-19T08:42:52.952706-07:00"}
{"id":"uv-eg-5","title":"Improve stitchable functions example in DepthDemoView","description":"Found in Sources/UltraviolenceExamples/Demos/DepthDemo/DepthDemoView.swift:60\n\nThe current implementation is a terrible example of stitchable functions and needs improvement.\n\nOrigin: GitHub issue #285","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.019962-07:00","updated_at":"2025-10-19T08:42:53.019962-07:00"}
{"id":"uv-eg-6","title":"Use proper Metal function loading in DepthDemoView","description":"Found in Sources/UltraviolenceExamples/Demos/DepthDemo/DepthDemoView.swift:59\n\nThe demo currently requires all functions to be named the same. Should use proper Metal function loading instead.\n\nOrigin: GitHub issue #284","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.086946-07:00","updated_at":"2025-10-19T08:42:53.086946-07:00"}
{"id":"uv-eg-7","title":"Use Ultraviolence's normal shader loading capabilities in DepthDemoView","description":"Found in Sources/UltraviolenceExamples/Demos/DepthDemo/DepthDemoView.swift:58\n\nThe DepthDemoView should use Ultraviolence's standard shader loading mechanism instead of custom loading code.\n\nOrigin: GitHub issue #283","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.153885-07:00","updated_at":"2025-10-19T08:42:53.153885-07:00"}
{"id":"uv-eg-8","title":"Move ColorAdjustComputePipeline code to proper location","description":"Found in Sources/UltraviolenceExamples/Demos/ColorAdjustDemo/ColorAdjustComputePipeline.swift:37\n\nThis code needs to be moved to a more appropriate location in the codebase.\n\nOrigin: GitHub issue #281","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.221853-07:00","updated_at":"2025-10-19T08:42:53.221853-07:00"}
{"id":"uv-eg-9","title":"Better solution for argument buffer in ColorAdjustComputePipeline","description":"Found in Sources/UltraviolenceExamples/Demos/ColorAdjustDemo/ColorAdjustComputePipeline.swift:25\n\nConsider using .argumentBuffer() as a better solution for handling parameters.\n\nOrigin: GitHub issue #280","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-19T08:42:53.290801-07:00","updated_at":"2025-10-19T08:42:53.290801-07:00"}
